===============================================================================
=      W e l c o m e   t o   K a k o u n e   T u t o r   -   Version 0.1      =
===============================================================================

        Kakoune is a modal text editor that seeks to be better than those
	that came before it.  This tutor is designed to teach you the
	absolute basics of the editor.

	If you are coming from Vim, this will be a jarring experience in
	many ways, though the basic principles are the same.  Kakoune
	seeks to take what Vim did right and improve upon it, even
	changing things if necessary.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

        NOTE:

	Please make sure that the caps-lock is not enabled as many of
	Kakoune's commands are case sensitive.  In fact, you may consider
	remapping your escape (<ESC>) key to caps-lock and vice versa.

	After that, you may want to consider creating a folder in your
	`~/Documents`, called `Kakoune`, for all files created during this
	tutorial -- it also may prove to be a good place to save any-
	thing else that is exclusive to Kakoune.  Note, that Kakoune is
	a plain-text editor, meaning it does not use propriëtary file
	types.  So there is no need to store files you write using
	Kakoune in a special location, or what.

	This series is meant to be taken day-by-day, albeït very short.
	Theoretically, it should be able to be done within an hour or so.
	If you are new to this, do Lessons 1.1 and 1.2 on your first day,
	stop, let it soak in, and come back tomorrow, refreshing on what
	you have learned.

	The best ways to learn new things are: one, to be in an emergency,
	where you need the new skill(s); and two, to take it in small
	pieces, pausing for a day or more with no further practice, and
	picking it up again later.

	It is recommended that you do Lesson 1 all the way through,
	then, when you start Lesson 2, after Lesson 2.1., redo Lesson 1
	from start to finish in one-sitting.  Repeat this all-the-way-
	through.  L3 -- L2; L4 -- L3; L5 -- L6; and so on.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                               TABLE OF CONTENTS

        Lesson 1   -   Absolute Basics

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                                  Lesson 1.1.
                              MODES AND MOVEMENT

        In a normal text editor, navigation is don with the mouse and/or
	arrow keys, whereïn the only function of the keyboard is to
	type -- it is not so with a modal text editor.

	One might consider them a product of a bygone era, but they still 
	have many advantages over a modern, GUI-based editor; the most
	basic of which is on elimination of wrist strain (believe it or
	not.)

	In Kakoune and similar editors, the default mode is the "VISUAL"
	mode.  In this mode, keys do not type letters, but are actually
	shortcuts, or "hotkeys" for vital functions, such as navigation
	and editing.

	1.1.1 Starting Kakoune

	Kakoune can be started by opening your terminal and executing
	`kak`.

	1.1.2 Basic navigation

	The cursor (a white box, by default) is moved using the keys:
	<h>, <j>, <k>, and <l>.

		 ^             This may seem counter intuitive, but on the
                 k             American, "QWERTY" keyboard, these keys are
	    < h     l >        on the homerow.  The most important functions
	         j             (up and down) are below the pointer-finger
		 v             and middle-finger.

          1. Practice moving the cursor around until you are comfortable,
	     then proceed onward.

	  2. Using your new-found navigation skills, key down and/or
	     over to the first letter of the first word of the first
	     paragraph of the next lesson and proceed.

	NOTE: If you ever are unsure about what mode Kakoune is in,
	      press <ESC> to get back to the visual mode.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                                  Lesson 1.2.
                              Exiting and Writing

        Here, we get our first taste of the "COMMAND" mode in Kakoune.
	It is entered by typing <:>.  On an American keyboard, to enter
	into command mode, you do so by pressing <;> while holding <Shift>.

	There are numerous commands, but we are interested in `q`, `w`,
	and `!`.

	1.2.1. Writing out a new file from the "Scratch" buffer

	  1. Using your terminal emulator, execute `kak` to start a new
	     Kakoune session.

	You most likely see the scratch-buffer filler.  It allows you to
	play around without the commitment of a real, "production" file.
	
	  2. Actually editing text is not important right now.  To
	     save this scratch file as a permanent file, type <:> to enter
	     into command mode and type the following and press return:

	       write -sync ~/Documents/Kakoune/file1.txt

	This wordy command is only necessary if writing a new file that
	you started from the scratch buffer.  Alternatively, it could
	be shorthanded as:

	       w! ~/Documents/Kakoune/file1.txt
	
	1.2.2. Exiting a file

	You may be thinking that alternatively, `e` could be used to
	`exit` the file.  While that is clever, it is, sadly, wrong.
	You want to `q` -uit the file.

	  1. Enter command mode with <:> and return `q` or `quit` to
	     exit Kakoune.

	NOTE: If there you cannot, for some reason, ever quit a document,
	      you may either have changes that need to be stashed, or
	      changes that you do not want to quit.  If the first, write
	      them. If the second, use `q!` to force quit of the buffer.
	
	Congratulations! you have successfully learned to exit Vi- oh
	wait, wrong tutorial...

	1.2.3. Writing an Existing File

        You may have discovered that, from your terminal, the `kak`
	command can receive an argument for a file name.  You can use
	this ability to open an existing file.

	  1. Use the following to open the file we just wrote-out
	     in 1.2.1.:

	       kak ~/Documents/Kakoune/file1.txt
	
	No the following instruction can be considered an advanced
	command.  How it works is not important, but it will be covered
	later.

	  2. In the file, press <j> to go down to the last line,
	     then press <o> to open a new line below tho present,
	     and enter random text.

	     Once done, press <ESC> to exit INSERT mode.
	
	You have just entered into and exited "INSERT" mode.  There
	are many ways to do so, and this is a very special way -- more
	detail in lesson 1.3.

	For now, let's just learn about writing existing files.

	   3. To write out the file's changes, enter command mode and
	      use `w` to write it.
	
	And, that simply, you have written changes to the file!

	1.2.4 Creating a New File and Write Quitting

	Here, we are getting into another, albeït basic, editing command
	before schedule.  We will be creating a new file from the
	commandline, inserting new text, and using a combination command
	for writing and quitting.

	All of this builds upon what we have learned so far, in a very
	straight-forward way.

	  1. Create a new text file in Kakoune with the following, from
	     your terminal emulator:

	       kak ~/Documents/Kakoune/file2.txt

	This has created a new file, circumventing that annoying scratch
	buffer.  If you would like, you can write blank files, but there
	is little point in that.

	  2. Type <i> to enter insert mode and type some line of text.
	      When done, press exit back into visual mode with <ESC>.
	
	Good, you can use that mnemonic.  How it works beyond the scope
	of this section, but it is not doing what you may think it is.

	  3. Enter command mode and use `wq` to write the file.

	Congratulations! For the time being, go ahead and take a break
	-- you have learned a lot today!
